# Publishes the Docker Image
name: Publish App

# Run on merged pull request
on:
  workflow_dispatch:
  release:
    types:
      - published

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.release.tag_name || github.head_ref || github.ref }}'
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Starter Library
        uses: actions/checkout@v4
        with:
          repository: eTutor-plus-plus/task-app-starter
          ref: main
          path: starter

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: app

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install Starter Library with Maven
        working-directory: starter
        run: mvn clean install -DskipTests --file pom.xml

      - name: Clean and Compile with maven
        working-directory: app
        run: mvn -B clean git-commit-id:revision spring-boot:build-info compile --file pom.xml

      - name: Build with Maven
        working-directory: app
        run: mvn -B package -DskipTests --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha

      - name: Log in to the Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
